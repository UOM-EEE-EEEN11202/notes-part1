Introduction
============

These course notes are split into 4 parts.

- `Part 0 on course adminstration <https://uom-eee-eeen1xxx2.github.io/>`_. 

- `Part 1 (this part) on underlying theory of how computers operate <https://uom-eee-eeen1xxx2.github.io/notes-part1/>`_. 

- `Part 2 on general purpose computing, mainly with Python <https://uom-eee-eeen1xxx2.github.io/notes-part2/>`_. 

- `Part 3 on higher performance computing, mainly with Rust <https://uom-eee-eeen1xxx2.github.io/notes-part3/>`_.

In this Part we're going to look at a number of different ways in which computers operate. The aim isn't to be the expert in all of these topics - it would probably be possible to do an entire course on any one of them! Rather, the aim is to have enough familarity in order to be able to progress with our programming.

We won't get very far with our programming without needing to know a little about how computers work *under the hood* in order to know why our code looks the way it does. If we treat the computer as black box, it's very hard to get the most oyt of it. We don't need to know everything about what's inside the box, but knowing a little helps a lot.

Remember that computers are human designed objects - they work the way they do because someone decided to make them work that way. Sometimes these decisions make a lot of sense. Sometimes the decision made sense at the time, possibly 50+ year ago. We might do it differently if we were to do it today, but we have to stick with what's already in place. Sometimes, different people decided different things, and there are different standards or ways of doing things. We need to pick one to actually use, even if other choices are perfectly good and someone else might pick a different one. Before starting our programming we need to know a little about which choices we're making and why. This includes learning about some common software development techniques.

The contents of Part 1 of the notes are:

.. toctree::
   :maxdepth: 2
   :numbered:
   :includehidden:

   0. Introduction <self>
   chapters/why_programming
   chapters/language_types
   chapters/computer_hardware
   chapters/computer_software
   chapters/major_operating_systems
   chapters/files_and_folders
   chapters/sustainability
   chapters/cybersecurity
   chapters/edia
   chapters/software_lifecycle
   chapters/software_development_tools
   chapters/data_types
